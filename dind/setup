#!/bin/sh
### BEGIN INIT INFO
# Provides:          infrastructure
# Required-Start:    $local_fs $network
# Required-Stop:     $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: rook_test_infrastructure
# Description:       provides infrastructure for testing rook
### END INIT INFO




case "$1" in
 start)
    export DEBIAN_FRONTEND=noninteractive
    export LC_ALL=C
    docker info #--> need better way to determine docker is ready

    #Docker import the image there, with ci:latest or something
    docker load < $(find /from-host/ -type f -name *.tar)

    #Git download test repo --> templates, rook-*.yamls, controller.yaml
    git clone https://github.com/dangula/rookStartUpScripts.git

    cd rookStartUpScripts/

    #install kubeadm
    apt-get install -y kubeadm

    kubeadm init --skip-preflight-checks

    #untaint
    kubectl taint nodes --all dedicated-

#WAIT --> add real wait code here

    #install weave
    #kubectl apply -f https://git.io/weave-kube

#WAIT --> add real wait code here
    sleep 60

     #patch controller
     yes | cp -rf kube-controller-manager.json /etc/kubernetes/manifests/

    sleep 5

    #TODO --> update rook operator with image pull location and tag

    kubectl create -f rook/rook-operator.yaml

#WAIT --> add real wait code here
    sleep 30

    #update rook cluster with image pull location and tag

    kubectl create -f rook/rook-cluster.yaml

#WAIT --> add real wait code here
    #sleep 100

    #install storage class
    #export MONS=$(kubectl -n rook get pod mon0 mon1 mon2 -o json|jq ".items[].status.podIP"|tr -d "\""|sed -e 's/$/:6790/'|paste -s -d, -)
    #sed 's#INSERT_HERE#'$MONS'#' rook/rook-storageclass.yaml | kubectl create -f -


    echo Rook Test infrastructure setup is complete!!!
;;
 stop)

   ;;
 restart)
  ./dind-cluster-v1.5.sh down
  sleep 5

   sleep 1
   ;;
 *)
   echo "Usage: rook_test_infrastructure {start|stop|restart}" >&2
   exit 3
   ;;
esac



